@using Microsoft.AspNet.Identity;
@model IEnumerable<CapStoneCraftxProject.Models.Trade>

@{
    ViewBag.Title = "Index";
}

<h2>Personal Cellar trades Log</h2>
<h4>Select from dropdown</h4>
@Html.Partial("_TradeListTypePartial",(CapStoneCraftxProject.Models.TradeListTypeViewModel) ViewBag.listtype)
@*<*@@*p>
    @Html.ActionLink("Create New", "Create")
</p>*@
<table class="table">
    <tr>
        <th>
            Recieved/SentTrades
        </th>
        <th>
            Offering Celllar
        </th>
        <th>
            Beer Being Offered
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SendingComments)
        </th>
        <th>
            Recieving Cellar
        </th>
        <th>
           Requested Beer
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReceivingComments)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.tradesstatus)
        </th>




        <th></th>
    </tr>

@foreach (var item in Model) {

    string rowclass;
    string edittext;
    string direction;

    if(item.Cellar.MemberId==User.Identity.GetUserId())
    {
        rowclass = "RecievedTrade";
        edittext = "Review";
        direction = "Recieved";
    }
    else
    {
        rowclass = "SentTrade";
        edittext = "Edit";
        direction = "Sent";
    }
<tr class="@rowclass">  
        <td>
            @direction
        </td>
        <td class="SenderInfo">
            @Html.DisplayFor(modelItem => item.Cellar1.CellarName)
        </td>
         <td class="SenderInfo">
            @Html.DisplayFor(modelItem => item.Beer1.BeerName)
        </td>
         <td>
            @Html.DisplayFor(modelItem => item.SendingComments)
        </td>
         <td class="RecieverInfo">
            
            @Html.DisplayFor(modelItem => item.Cellar.CellarName)
        </td> 
         <td class="RecieverInfo">
            @Html.DisplayFor(modelItem => item.Beer.BeerName)
        </td> 
         <td>
            @Html.DisplayFor(modelItem => item.ReceivingComments)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tradesstatus)
        </td>





        <td>
            @Html.ActionLink(edittext, "Edit", new { id = item.Id }, new { @class = "button small" })
            @if (item.Cellar1.MemberId == User.Identity.GetUserId())
            {
                <text>
                    @*|*@
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "button small" })
                </text>
            }

        </td>
    </tr>
}

</table>
